@inject NavigationManager Navigation
@inject IHttpClientFactory ClientFactory
@page "/"

@if (errorMessage != null)
{
    <ErrorMessage Message="@errorMessage" />
}
else if (Albums == null)
{
    <Loading />
}
else
{
    <CascadingValue Value="Albums">
        <Home />
    </CascadingValue>
}

@code {
    protected List<AlbumReturnDto>? Albums { get; set; }

    protected string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var client = ClientFactory.CreateClient("RecordStoreAPI");

            var response = await client.GetFromJsonAsync<List<AlbumReturnDto>>("Albums/TopFive");

            Albums = response != null ? response : [];
        }
        catch(Exception ex)
        {
            errorMessage = $"An error occured: {ex.Message}";
        }
    }
}
