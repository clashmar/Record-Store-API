@rendermode InteractiveServer

<div>
    <div class="field">
        <label class="label">Name</label>
        <div class="control" width="20px">
            <input class="input" type="text" placeholder="Album Name" @bind="UpdatedAlbum.Name"/>
        </div>
        @if (UpdatedAlbum.Name.Length == 0)
        {
            <p class="help is-danger">Enter a valid name.</p>
        }
    </div>

    <div class="field">
        <label class="label">Artist</label>
        <div class="control has-icons-right">
            <input class="input" type="text" placeholder="Artist Name" @bind="UpdatedAlbum.ArtistName"/>
            <span class="icon is-right">
                <i class="fas fa-check"></i>
            </span>
        </div>
        @if(UpdatedAlbum.ArtistName.Length == 0)
        {
            <p class="help is-danger">Enter a valid artist.</p>
        }
    </div>

    <div class="field">
        <label class="label">Release Year</label>
        <div class="control has-icons-right">
            <input class="input" type="number" placeholder="Release Year" @bind="UpdatedAlbum.ReleaseYear"/>
            <span class="icon is-right">
                <i class="fas fa-check"></i>
            </span>
        </div>
        @if (UpdatedAlbum.ReleaseYear < 1860)
        {
            <p class="help is-danger">Enter a valid release year.</p>
        }
    </div>

    <div class="field">
        <label class="label">Add/Delete Genre</label>
        <div class="control">
            <div class="select mr-2">
                <select @bind="@genreToAdd">
                    <option>Add Genre</option>
                    @foreach (string genre in Genre.ReturnGenresInOrder())
                    {
                        <option >@genre</option>
                    }
                </select>
            </div>
            <button class="button is-outlined ml-2 mr-2 is-success" @onclick="()=>AddGenre()">Add</button>
            @foreach(var genre in UpdatedAlbum.Genres) 
            {
                <button class="button is-outlined ml-2 mr-2 is-danger" @onclick="()=>DeleteGenre(genre)">@Genre.ToFriendlyString(genre)</button>
            }
        </div>
    </div>

    <div class="field pb-3">
        <label class="label">Information</label>
        <div class="control">
            <textarea class="textarea" placeholder="Album Info" @bind="UpdatedAlbum.Information"></textarea>
        </div>
    </div>

    <div class="field is-grouped pb-6">
        <div class="control">
            <button class="button is-light" @onclick="()=>Submit()">Submit</button>
        </div>
        <div class="control">
            <button class="button is-dark">Cancel</button>
        </div>
            <p class="help is-danger mt-2">@warning</p>
    </div>

    @if(updated) 
    {
        <h2>Genre to add: @genreToAdd</h2>
        <h2>@UpdatedAlbum.Name</h2>
        <h2>@UpdatedAlbum.ArtistName</h2>
        <h2>@UpdatedAlbum.ArtistID</h2>
        <h2>@UpdatedAlbum.ReleaseYear</h2>
        @foreach(Genres genre in UpdatedAlbum.Genres)
        {
            <h2>@Genre.ToFriendlyString(genre)</h2>
        }
        <h2>@UpdatedAlbum.Information</h2>
        <h2>@UpdatedAlbum.StockQuantity</h2>
        <h2>@UpdatedAlbum.PriceInPence</h2>
    }
</div>

@code {
    [Parameter]
    public AlbumDetails? UpdatedAlbum { get; set; }

    [Parameter]
    public int ID { get; set; } = 1;

    private bool updated = false;

    private string genreToAdd;

    private string warning = "";

    public void Submit() 
    {
        if (CheckForm()) { updated = !updated; warning = ""; }
        else warning = "Make Sure All Fields Have Been Completed";
    }

    private bool CheckForm() 
    {
        bool isValid = true;

        if (
            !(UpdatedAlbum.Name.Length > 0) |
            !(UpdatedAlbum.ArtistName.Length > 0) |
            !(UpdatedAlbum.ReleaseYear > 0) |
            !(UpdatedAlbum.Genres.Count > 0)) isValid = false;

        return isValid;
    }

    private void AddGenre()
    {
        var result = Genre.ToGenre(genreToAdd);

        if (result.success && !UpdatedAlbum!.Genres.Contains(result.genre)) 
        UpdatedAlbum!.Genres.Add(result.genre);
    }

    private void DeleteGenre(Genres genre) 
    {
        UpdatedAlbum!.Genres.Remove(genre);      
    }
}
