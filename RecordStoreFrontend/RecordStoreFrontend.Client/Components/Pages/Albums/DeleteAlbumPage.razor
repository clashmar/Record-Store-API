@inject NavigationManager Navigation
@inject IHttpClientFactory ClientFactory
@rendermode InteractiveServer
@page "/Albums/{Id:int}/Delete"

<ErrorMessage Message="@errorMessage" />

<div class="has-text-centered">
    <h1 class="is-size-2 has-text-light has-text-weight-bold">Are You Sure?</h1>
    <div class="field is-grouped pb-6 is-justify-content-center mt-3">
        <div class="control">
            <button class="button is-danger is-dark" type="button" @onclick="()=>HandleDelete()">Delete</button>
        </div>
        <div class="control">
            <button class="button is-dark" type="button" @onclick="()=>Cancel()">Cancel</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    protected string? errorMessage;

    protected async Task HandleDelete()
    {
        try 
        {
            var client = ClientFactory.CreateClient("RecordStoreAPI");

            var response = await client.DeleteAsync($"Albums/{Id}");

            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo($"/Albums?deleted=true");
            }
            else
            {
                errorMessage = $"An error occured: {response.StatusCode}";
            }
        }
        catch(Exception ex)
        {
            errorMessage = $"An error occured: {ex.Message}";
        }
    }

    protected void Cancel()
    {
        Navigation.NavigateTo($"/Albums/{Id}");
    }
}